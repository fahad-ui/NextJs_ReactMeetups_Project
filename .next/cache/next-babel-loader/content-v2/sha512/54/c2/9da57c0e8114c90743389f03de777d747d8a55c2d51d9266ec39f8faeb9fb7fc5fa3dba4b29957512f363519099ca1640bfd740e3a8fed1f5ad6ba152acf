{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react\\\\NextJsBigProject\\\\pages\\\\index.js\";\nimport Head from 'next/';\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\"; // const DUMMY_MEETUPS = [\n//   {\n//     id: 'm1',\n//     title: \"A first Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 5,12345 City\",\n//     description: \"This is first Meetup\",\n//   },\n//   {\n//     id: 'm2',\n//     title: \"A Second Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 15,123451212 City\",\n//     description: \"This is Second Meetup\",\n//   },\n//   {\n//     id: 'm3',\n//     title: \"A Third Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 32,345121 City\",\n//     description: \"This is a third Meetup\",\n//   },\n// ];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n//   //fetch data from an API\n//   return {\n//     props: {\n//       meetups:DUMMY_MEETUPS\n//     }\n//   }\n// }\n//this works only in pages,not in components \n//getStaticProps is reserved name\n\n\nexport async function getStaticProps() {\n  //fetch data from API\n  const client = await MongoClient.connect('mongodb+srv://fahadullakhan24:P18IW21S0021@cluster0.6apneoo.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      //we are mapping because because from monodb we are getting an id whic is of object+string[not supported]\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    //this props will be recieved above by HOMEPAGE\n    revalidate: 10 //regenerate data after every 10 seconds if there are request coming in, and this will replace the old generated pages,\n    //this helps because we dont need to rebuild after deployment, if there is some new upcoming data from server\n\n  };\n} //we are moving data fetching away from the client to the server side, [it will be pre-rendered]\n// we can view under View page source\n\nexport default HomePage;","map":{"version":3,"sources":["D:/react/NextJsBigProject/pages/index.js"],"names":["Head","MeetupList","MongoClient","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,OAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAA+B;AACpC;AACA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,6GAApB,CAArB;AACC,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAED,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEC,SAAO;AACNV,IAAAA,KAAK,EAAE;AACL;AACAC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC9BC,QAAAA,KAAK,EAACD,MAAM,CAACC,KADiB;AAE9BC,QAAAA,OAAO,EAACF,MAAM,CAACE,OAFe;AAG9BC,QAAAA,KAAK,EAACH,MAAM,CAACG,KAHiB;AAI9BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ0B,OAAL,CAAlB;AAFJ,KADD;AASJ;AACFC,IAAAA,UAAU,EAAC,EAVL,CAUQ;AACd;;AAXM,GAAP;AAaF,C,CACD;AACA;;AAGA,eAAepB,QAAf","sourcesContent":["import Head from 'next/'\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\n// const DUMMY_MEETUPS = [\r\n//   {\r\n//     id: 'm1',\r\n//     title: \"A first Meetup\",\r\n//     image:\r\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n//     address: \"Some address 5,12345 City\",\r\n//     description: \"This is first Meetup\",\r\n//   },\r\n//   {\r\n//     id: 'm2',\r\n//     title: \"A Second Meetup\",\r\n//     image:\r\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n//     address: \"Some address 15,123451212 City\",\r\n//     description: \"This is Second Meetup\",\r\n//   },\r\n//   {\r\n//     id: 'm3',\r\n//     title: \"A Third Meetup\",\r\n//     image:\r\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n//     address: \"Some address 32,345121 City\",\r\n//     description: \"This is a third Meetup\",\r\n//   },\r\n// ];\r\n\r\nfunction HomePage(props) {\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req\r\n//   const res = context.res\r\n\r\n//   //fetch data from an API\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups:DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n\r\n//this works only in pages,not in components \r\n//getStaticProps is reserved name\r\nexport async function getStaticProps(){\r\n  //fetch data from API\r\n  const client = await MongoClient.connect('mongodb+srv://fahadullakhan24:P18IW21S0021@cluster0.6apneoo.mongodb.net/meetups?retryWrites=true&w=majority')\r\n   const db = client.db();\r\n\r\n   const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find().toArray()\r\n\r\n  client.close()\r\n\r\n   return {\r\n    props: { \r\n      //we are mapping because because from monodb we are getting an id whic is of object+string[not supported]\r\n      meetups: meetups.map(meetup => ({\r\n        title:meetup.title,\r\n        address:meetup.address,\r\n        image:meetup.image,\r\n        id: meetup._id.toString()\r\n      }))\r\n    },//this props will be recieved above by HOMEPAGE\r\n    revalidate:10 //regenerate data after every 10 seconds if there are request coming in, and this will replace the old generated pages,\r\n    //this helps because we dont need to rebuild after deployment, if there is some new upcoming data from server\r\n   }\r\n}\r\n//we are moving data fetching away from the client to the server side, [it will be pre-rendered]\r\n// we can view under View page source\r\n\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}