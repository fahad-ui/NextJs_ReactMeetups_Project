{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\"; // const DUMMY_MEETUPS = [\n//   {\n//     id: 'm1',\n//     title: \"A first Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 5,12345 City\",\n//     description: \"This is first Meetup\",\n//   },\n//   {\n//     id: 'm2',\n//     title: \"A Second Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 15,123451212 City\",\n//     description: \"This is Second Meetup\",\n//   },\n//   {\n//     id: 'm3',\n//     title: \"A Third Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 32,345121 City\",\n//     description: \"This is a third Meetup\",\n//   },\n// ];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    }), \";\"]\n  });\n} // export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n//   //fetch data from an API\n//   return {\n//     props: {\n//       meetups:DUMMY_MEETUPS\n//     }\n//   }\n// }\n//this works only in pages,not in components\n//getStaticProps is reserved name\n\n\nexport async function getStaticProps() {\n  //fetch data from API\n  const client = await MongoClient.connect(\"mongodb+srv://fahadullakhan24:P18IW21S0021@cluster0.6apneoo.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      //we are mapping because because from monodb we are getting an id whic is of object+string[not supported]\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    //this props will be recieved above by HOMEPAGE\n    revalidate: 10 //regenerate data after every 10 seconds if there are request coming in, and this will replace the old generated pages,\n    //this helps because we dont need to rebuild after deployment, if there is some new upcoming data from server\n\n  };\n} //we are moving data fetching away from the client to the server side, [it will be pre-rendered]\n// we can view under View page source\n\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}